# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven


name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29]  
        target: [default]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: actions/setup-node@v2
      with:
       node-version: '12'
    - run: |
            npm install -g appium
            appium -v
            appium &>/dev/null &
    - name: checkout
      uses: actions/checkout@v3

    - name: Gradle cache
      uses: gradle/gradle-build-action@v2
    - run: | 
            gradle init
            gradle wrapper
            chmod 777 gradlew
        
 #   - name: AVD cache
  #    uses: actions/cache@v3
   #   id: avd-cache
    #  with:
     #     path: |
      #      ~/.android/avd/*
       #     ~/.android/adb*
        #  key: avd-${{ matrix.api-level }}

   # - name: create AVD and generate snapshot for caching
    #  if: steps.avd-cache.outputs.cache-hit != 'true'
   #   uses: reactivecircus/android-emulator-runner@v2
    #  with:
     #     api-level: ${{ matrix.api-level }}
      #    force-avd-creation: false
       #   emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        # script: echo "Generated AVD snapshot for caching."
  #  - name: Run Appium Tests
   #   uses: reactivecircus/android-emulator-runner@v2
    #  with:
     #   api-level: ${{ matrix.api-level }}
      #  target: ${{ matrix.target }}
       # arch: x86_64
     #   profile: Nexus 6
      #  script: ./gradlew --version
      
      # /bin/sh -c \echo no | avdmanager create avd --force -n test --abi 'default/x86_64' --package 'system-images;android-29;default;x86_64' --device 'Nexus 6'
            #emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim &
  #sdkmanager --install "system-images;android-23;google_apis;x86"
           #   android list target
          #  android list avd
                    #  avdmanager --verbose create avd --force --name "my_android_31" --package "system-images;android-31;google_apis_playstore;x86_64" --tag "google_apis_playstore" --abi "x86_64" --device 'Nexus 6
           # no
           # avdmanager create avd -n TestAVD -k "system-images;android-23;google_apis;x86_64" --device "Pixel_4"
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    - run: |
            sdkmanager --install "system-images;android-31;google_apis_playstore;x86_64"
            echo no | $ANDROID_HOME/tools/avdmanager --verbose create avd --force --name "my_android_31" --package "system-images;android-31;google_apis_playstore;x86_64" --tag "google_apis_playstore" --abi "x86_64"
            $ANDROID_HOME/tools/android list avd
            $ANDROID_HOME/tools/emulator64-arm -avd my_android_31 -no-window -no-boot-anim -no-audio -verbose &
            wait-for-emulator
            unlock-emulator-screen
       #     cd /Users/runner/Library/Android/sdk
        #    ls
         #   brew cleanup
         #   brew update
         #   brew install watchman
         #   brew install intel-haxm
         #   sdkmanager --install "system-images;android-31;google_apis_playstore;x86_64"
         #   avdmanager create avd --force -n test --abi "x86_64" --package "system-images;android-31;google_apis_playstore;x86_64" --tag "google_apis_playstore" --device "Nexus 6"
         #   sdkmanager --licenses
         #   emulator -list-avds
    #- name: Launch Emulator
     # run: | 
      #      /Users/runner/Library/Android/sdk/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim &
       #     # $ANDROID_HOME/platform-tools/adb wait-for-device 
        #    adb devices
           
